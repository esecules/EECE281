---------------------------------------------------------------------------------------
Document your subroutines here so everyone can know how to use them and what
to expect from them.

an example:

"subroutine_name"  from filename.asm
	Function: (what it does)
	Reads (some register(s) or flags...)
	Modifies (some register(s) or flags...)
	Requires (optional) 

-Dont make changes to the specifications unless absoutly necessary as others will be
 using your code. If a change is necessary notify the whole group via email.

---------------------------------------------------------------------------------------

"InitSerialPort" comms.asm
	Function: configure serial port with TIMER2
	Modifies: TR2, T2CON, SCON, RCAP2H, RCAP2L
	Requires: to be run at start of program

"putchar" comms.asm
	Function: send a byte through serial
	Reads:	  A
	Requires: A contains the ASCII code to be sent

"SendString" comms.asm
	Function: send text string
	Reads:    @A+dptr
	Modifies: A
	Requires: dptr is loaded with the message to send,
		  message terminated with null
"SendBCD3" comms.asm
	Function: send bcd number
	Reads:    bcd
	Modifies: A
	Requires: bcd contains the number to send

"getchar" comms.asm
	Function: get a byte through serial
	Reads:    SERIAL PORT
	Modifies: A, SERIAL PORT (echo)

"ASCII" comms.asm
	Function: sends all ASCII characters for testing
	Modifies: A, R7 SERIAL PORT


"LCD_Init" LCD_interface.asm
	Function: configures the LCD_display

"LCD_command" LCD_interface.asm
	Function: sends a command to the LCD 
	Reads:	  A
	Modifies: nothing

"LCD_put" LCD_interface.asm
	Function: sends a char to the LCD
	Reads:	  A
	Modifies: nothing
	Requires:  A contains the ASCII code to be sent

"LCD_string" LCD_interface.asm
	Function: sends a string to the LCD
	Reads:	  dptr
	Modifies: A, R1
	Requires: dptr is loaded with the message to send,
		  message terminated with 0

"LCD_float_number" LCD_interface.asm
	Function: sends a string to the LCD
	Reads:	 dptr	
	Modifies: A, R1
	Requires: dptr is loaded with the float number to send,
		  message terminated automaticly by presetting convert_binary_to_string and function itself acordinly. 

"LCD_clear" LCD_interface.asm
	Function: sends a string to the LCD
	Modifies: A, R1

"convert_binary_to_string" LCD_interface.asm
	Function: converts binary numbers from a dtpr to a coresponding string
	Reads:	 dptr
	Modifies: A, B, R7

"custom_character_init" LCD_interface.asm
	Function: sends a ascii code for a custom character via the CGRAM of the LCD.
	Modifies: A

------------------------------------------------------------------
--			Temperature curve			--
------------------------------------------------------------------

"Get Ideal Temp" Temp_lookup.asm 
	Function: gets the current ideal temp based on time
	Reads: time and LUTs starting at address 50H
	Modifies: tempi (ideal temperature based on time)
		  or tempi = 0 if the time is out of the range of [0,511]
	Requires: time must be 16 bits 




	
